{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Samriti Raj\\\\OneDrive\\\\Desktop\\\\projects\\\\image-to-pdf\\\\src\\\\components\\\\ImageReorder.js\";\nimport React from \"react\";\nimport { SortableContainer, SortableElement } from \"react-sortable-hoc\";\nimport { arrayMoveImmutable } from \"array-move\";\nimport \"../styles/index.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SortableItem = SortableElement(_c = ({\n  image,\n  index\n}) => /*#__PURE__*/_jsxDEV(\"div\", {\n  className: \"image-preview-container\",\n  children: /*#__PURE__*/_jsxDEV(\"img\", {\n    src: image.preview,\n    alt: `Uploaded ${index}`,\n    className: \"image-preview\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 7,\n  columnNumber: 3\n}, this));\n_c2 = SortableItem;\nconst SortableList = SortableContainer(_c3 = ({\n  images\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex-container\",\n    children: images.map((image, index) => /*#__PURE__*/_jsxDEV(SortableItem, {\n      index: index,\n      image: image\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }, this);\n});\n_c4 = SortableList;\nconst ImageReorder = ({\n  images,\n  setImages\n}) => {\n  const onSortEnd = ({\n    oldIndex,\n    newIndex\n  }) => {\n    setImages(arrayMoveImmutable(images, oldIndex, newIndex));\n  };\n  return /*#__PURE__*/_jsxDEV(SortableList, {\n    images: images,\n    onSortEnd: onSortEnd,\n    axis: \"x\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 10\n  }, this);\n};\n_c5 = ImageReorder;\nexport default ImageReorder;\nvar _c, _c2, _c3, _c4, _c5;\n$RefreshReg$(_c, \"SortableItem$SortableElement\");\n$RefreshReg$(_c2, \"SortableItem\");\n$RefreshReg$(_c3, \"SortableList$SortableContainer\");\n$RefreshReg$(_c4, \"SortableList\");\n$RefreshReg$(_c5, \"ImageReorder\");","map":{"version":3,"names":["React","SortableContainer","SortableElement","arrayMoveImmutable","jsxDEV","_jsxDEV","SortableItem","_c","image","index","className","children","src","preview","alt","fileName","_jsxFileName","lineNumber","columnNumber","_c2","SortableList","_c3","images","map","_c4","ImageReorder","setImages","onSortEnd","oldIndex","newIndex","axis","_c5","$RefreshReg$"],"sources":["C:/Users/Samriti Raj/OneDrive/Desktop/projects/image-to-pdf/src/components/ImageReorder.js"],"sourcesContent":["import React from \"react\";\r\nimport { SortableContainer, SortableElement } from \"react-sortable-hoc\";\r\nimport { arrayMoveImmutable } from \"array-move\";\r\nimport \"../styles/index.css\";\r\n\r\nconst SortableItem = SortableElement(({ image, index }) => (\r\n  <div className=\"image-preview-container\">\r\n    <img src={image.preview} alt={`Uploaded ${index}`} className=\"image-preview\" />\r\n  </div>\r\n));\r\n\r\nconst SortableList = SortableContainer(({ images }) => {\r\n  return (\r\n    <div className=\"flex-container\">\r\n      {images.map((image, index) => (\r\n        <SortableItem key={index} index={index} image={image} />\r\n      ))}\r\n    </div>\r\n  );\r\n});\r\n\r\nconst ImageReorder = ({ images, setImages }) => {\r\n  const onSortEnd = ({ oldIndex, newIndex }) => {\r\n    setImages(arrayMoveImmutable(images, oldIndex, newIndex));\r\n  };\r\n\r\n  return <SortableList images={images} onSortEnd={onSortEnd} axis=\"x\" />;\r\n};\r\n\r\nexport default ImageReorder;\r\n\r\n\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,iBAAiB,EAAEC,eAAe,QAAQ,oBAAoB;AACvE,SAASC,kBAAkB,QAAQ,YAAY;AAC/C,OAAO,qBAAqB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE7B,MAAMC,YAAY,GAAGJ,eAAe,CAAAK,EAAA,GAACA,CAAC;EAAEC,KAAK;EAAEC;AAAM,CAAC,kBACpDJ,OAAA;EAAKK,SAAS,EAAC,yBAAyB;EAAAC,QAAA,eACtCN,OAAA;IAAKO,GAAG,EAAEJ,KAAK,CAACK,OAAQ;IAACC,GAAG,EAAE,YAAYL,KAAK,EAAG;IAACC,SAAS,EAAC;EAAe;IAAAK,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE;AAAC;EAAAH,QAAA,EAAAC,YAAA;EAAAC,UAAA;EAAAC,YAAA;AAAA,OAC5E,CACN,CAAC;AAACC,GAAA,GAJGb,YAAY;AAMlB,MAAMc,YAAY,GAAGnB,iBAAiB,CAAAoB,GAAA,GAACA,CAAC;EAAEC;AAAO,CAAC,KAAK;EACrD,oBACEjB,OAAA;IAAKK,SAAS,EAAC,gBAAgB;IAAAC,QAAA,EAC5BW,MAAM,CAACC,GAAG,CAAC,CAACf,KAAK,EAAEC,KAAK,kBACvBJ,OAAA,CAACC,YAAY;MAAaG,KAAK,EAAEA,KAAM;MAACD,KAAK,EAAEA;IAAM,GAAlCC,KAAK;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAA+B,CACxD;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC,CAAC;AAACM,GAAA,GARGJ,YAAY;AAUlB,MAAMK,YAAY,GAAGA,CAAC;EAAEH,MAAM;EAAEI;AAAU,CAAC,KAAK;EAC9C,MAAMC,SAAS,GAAGA,CAAC;IAAEC,QAAQ;IAAEC;EAAS,CAAC,KAAK;IAC5CH,SAAS,CAACvB,kBAAkB,CAACmB,MAAM,EAAEM,QAAQ,EAAEC,QAAQ,CAAC,CAAC;EAC3D,CAAC;EAED,oBAAOxB,OAAA,CAACe,YAAY;IAACE,MAAM,EAAEA,MAAO;IAACK,SAAS,EAAEA,SAAU;IAACG,IAAI,EAAC;EAAG;IAAAf,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AACxE,CAAC;AAACa,GAAA,GANIN,YAAY;AAQlB,eAAeA,YAAY;AAAC,IAAAlB,EAAA,EAAAY,GAAA,EAAAE,GAAA,EAAAG,GAAA,EAAAO,GAAA;AAAAC,YAAA,CAAAzB,EAAA;AAAAyB,YAAA,CAAAb,GAAA;AAAAa,YAAA,CAAAX,GAAA;AAAAW,YAAA,CAAAR,GAAA;AAAAQ,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}